in vec3 a_position;
in vec3 a_normal;
in vec3 a_tangent;
in vec3 a_color;

out vec3 v_normal;
out vec3 v_tangent;
out vec3 v_view_direction;
out vec3 v_color;

void main()
{
   gl_Position    = model.clip_from_model * vec4(a_position, 1.0);
   v_normal       = vec3(model.world_from_model * vec4(a_normal, 0.0));
   v_tangent      = vec3(model.world_from_model * vec4(a_tangent, 0.0));
   vec4 position  = model.world_from_model * vec4(a_position, 1.0);
   vec3 view_position_in_world = vec3(
      camera.world_from_view[3][0],
      camera.world_from_view[3][1],
      camera.world_from_view[3][2]
   );
   v_view_direction  = view_position_in_world - position.xyz;
   v_color           = a_color;
   vec3 N = v_normal;
   vec3 B = vec3(0.0, 1.0, 0.0);
   vec3 T = cross(N, B);
   v_tangent = T;
}
