in vec3 a_position;
in vec3 a_normal;
in vec3 a_tangent;
in vec2 a_texcoord;

out vec3 v_normal;
out vec3 v_tangent;
out vec3 v_view_direction;
out vec2 v_texcoord;
out vec3 v_light_direction;
out vec3 v_light_distance;
out vec3 v_position;

void main()
{
   gl_Position    = models.clip_from_model * vec4(a_position, 1.0);
   //v_normal       = vec3(models.world_from_model * vec4(a_normal, 0.0));
   //v_tangent      = vec3(models.world_from_model * vec4(a_tangent, 0.0));
   v_normal       = a_normal;
   v_tangent      = a_tangent;
   vec4 position  = models.world_from_model * vec4(a_position, 1.0);
   vec3 view_position_in_world = vec3(
      camera.world_from_view[3][0],
      camera.world_from_view[3][1],
      camera.world_from_view[3][2]
   );
   v_position = position.xyz;
   v_light_direction = lights.position - position.xyz;
   v_view_direction  = view_position_in_world - position.xyz;
   v_texcoord = a_texcoord;
}
