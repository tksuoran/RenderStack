varying vec3 v_normal;
varying vec4 v_color;
varying vec2 v_texcoord;

vec3 hsv_to_rgb(vec3 hsv)
{
   vec3 rgb = hsv.zzz;
   if (hsv.y != 0.0)
   {
      float var_h = hsv.x * 6.0;
      float var_i = floor(var_h);   // Or ... var_i = floor(var_h)
      float var_1 = hsv.z * (1.0 - hsv.y);
      float var_2 = hsv.z * (1.0 - hsv.y * (var_h - var_i));
      float var_3 = hsv.z * (1.0 - hsv.y * (1.0 - (var_h - var_i)));
      if      (var_i == 0.0) { rgb = vec3(hsv.z, var_3, var_1); }
      else if (var_i == 1.0) { rgb = vec3(var_2, hsv.z, var_1); }
      else if (var_i == 2.0) { rgb = vec3(var_1, hsv.z, var_3); }
      else if (var_i == 3.0) { rgb = vec3(var_1, var_2, hsv.z); }
      else if (var_i == 4.0) { rgb = vec3(var_3, var_1, hsv.z); }
      else                   { rgb = vec3(hsv.z, var_1, var_2); }
   }
   return rgb;
}

void main(void)
{
   // out_color = vec4(v_texcoord.yx, 0.0, v_color.a);
   vec4 hsvx = gui_hsv_matrix * vec4(v_texcoord.xy, 1.0, 1.0);
   vec3 rgb = hsv_to_rgb(hsvx.xyz);
   float a = 1.0;
   float r = pow(rgb.r, 1.0 / a);
   float g = pow(rgb.g, 1.0 / a);
   float b = pow(rgb.b, 1.0 / a);
   gl_FragColor = vec4(r, g, b, gui_color_add.a);
}

